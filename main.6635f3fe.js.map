{"version":3,"sources":["scripts/main.js"],"names":["button","document","querySelector","tbody","messages","querySelectorAll","score","rows","cells","isChanged","lastMergedCell","rowIndex","addNumbers","randomRowIndex","randomNumber","randomCellIndex","randomCell","number","Math","random","innerHTML","length","className","changeFontSize","size","floor","el","style","fontSize","setTimeout","horizontalShift","callback","row","rowCells","verticalShift","i","columnCells","canAddNewNum","changeTile","current","previous","mult","classList","remove","checkCellRight","cell","nextElementSibling","cellsObj","next","cellIndex","checkCellLeft","previousElementSibling","checkCellUp","column","rowObj","currentRow","previousRow","indexOf","checkCellDown","checkLose","rows1","loseFlag","r","push","c","every","addEventListener","forEach","contains","add","message","e","code"],"mappings":"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","file":"main.6635f3fe.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst button = document.querySelector('button');\nconst tbody = document.querySelector('tbody');\nconst messages = document.querySelectorAll('.message');\nconst score = document.querySelector('.game-score');\nconst rows = [...tbody.rows];\nconst cells = document.querySelectorAll('td');\n\nlet isChanged = false;\nlet lastMergedCell = -1;\nlet rowIndex = -1;\n\nbutton.addEventListener('click', () => {\n  [...cells].forEach(cell => {\n    if (cell.classList.contains(`field-cell--${cell.innerHTML}`)) {\n      cell.classList.remove(`field-cell--${cell.innerHTML}`);\n    }\n\n    cell.innerHTML = '';\n    cell.className = 'field-cell';\n    score.innerHTML = '0';\n  });\n\n  addNumbers();\n  addNumbers();\n\n  button.classList.remove('start');\n  button.classList.add('restart');\n  button.innerHTML = 'Restart';\n\n  [...messages].forEach(message => {\n    message.classList.add('hidden');\n  });\n});\n\nfunction addNumbers() {\n  const randomRowIndex = randomNumber(4);\n  const randomCellIndex = randomNumber(4);\n  const randomRow = rows[randomRowIndex];\n  const randomCell = randomRow.cells[randomCellIndex];\n  const number = Math.random() >= 0.9 ? 4 : 2;\n\n  if (randomCell.innerHTML.length !== 0) {\n    addNumbers();\n  } else {\n    randomCell.innerHTML = number;\n    randomCell.className = `field-cell field-cell--${number}`;\n    changeFontSize(randomCell);\n  }\n}\n\nfunction randomNumber(size) {\n  return Math.floor(Math.random() * size);\n}\n\nfunction changeFontSize(el) {\n  el.style.fontSize = '27px';\n\n  setTimeout(() => {\n    el.style.fontSize = '22px';\n  }, 300);\n}\n\nfunction horizontalShift(callback) {\n  isChanged = false;\n\n  for (const row of rows) {\n    const rowCells = [...row.cells];\n\n    lastMergedCell = -1;\n\n    callback(rowCells);\n  }\n}\n\nfunction verticalShift(callback) {\n  isChanged = false;\n\n  for (let i = 0; i < rows.length; i += 1) {\n    const columnCells = [\n      rows[0].cells[i],\n      rows[1].cells[i],\n      rows[2].cells[i],\n      rows[3].cells[i],\n    ];\n\n    rowIndex = -1;\n\n    callback(columnCells);\n  }\n}\n\ndocument.addEventListener('keydown', (e) => {\n  switch (e.code) {\n    case 'KeyA':\n    case 'ArrowLeft':\n      horizontalShift(checkCellLeft);\n\n      break;\n\n    case 'KeyD':\n    case 'ArrowRight':\n      horizontalShift(checkCellRight);\n\n      break;\n\n    case 'KeyW':\n    case 'ArrowUp':\n      verticalShift(checkCellUp);\n\n      break;\n\n    case 'KeyS':\n    case 'ArrowDown':\n      verticalShift(checkCellDown);\n\n      break;\n\n    default:\n      return;\n  };\n\n  canAddNewNum();\n\n  if (checkLose(rows)) {\n    const loseMessage = document.querySelector('.message-lose');\n\n    loseMessage.classList.remove('hidden');\n  }\n});\n\nfunction canAddNewNum() {\n  if (isChanged) {\n    addNumbers();\n    isChanged = false;\n  }\n}\n\nfunction changeTile(current, previous, mult = 1) {\n  previous.innerHTML = current.innerHTML * mult;\n  previous.className = `field-cell field-cell--${previous.innerHTML}`;\n  changeFontSize(previous);\n  current.className = 'field-cell';\n  current.innerHTML = '';\n\n  if (mult !== 1) {\n    score.innerHTML = +score.innerHTML + +previous.innerHTML;\n  }\n\n  if (previous.innerHTML === '2048') {\n    const winMessage = document.querySelector('.message-win');\n\n    winMessage.classList.remove('hidden');\n  }\n}\n\nfunction checkCellRight(cell) {\n  for (let i = cell.length - 1; i >= 0; i -= 1) {\n    if (!cell[i].nextElementSibling) {\n      continue;\n    }\n\n    const cellsObj = {\n      current: cell[i],\n    };\n\n    cellsObj.next = cellsObj.current.nextElementSibling;\n\n    let { current, next } = cellsObj;\n\n    while (next.innerHTML.length === 0 && current.innerHTML.length > 0) {\n      changeTile(current, next);\n      isChanged = true;\n\n      if (!next.nextElementSibling) {\n        break;\n      }\n\n      current = next;\n      next = current.nextElementSibling;\n    };\n\n    const canMerge = next.innerHTML === current.innerHTML\n      && next.innerHTML\n      && lastMergedCell !== next.cellIndex;\n\n    if (canMerge) {\n      changeTile(current, next, 2);\n      lastMergedCell = next.cellIndex;\n      isChanged = true;\n    }\n  }\n};\n\nfunction checkCellLeft(cell) {\n  for (let i = 1; i < cell.length; i += 1) {\n    if (!cell[i].previousElementSibling) {\n      continue;\n    }\n\n    const cellsObj = {\n      current: cell[i],\n    };\n\n    cellsObj.previous = cellsObj.current.previousElementSibling;\n\n    let { current, previous } = cellsObj;\n\n    while (previous.innerHTML.length === 0 && current.innerHTML.length > 0) {\n      changeTile(current, previous);\n      isChanged = true;\n\n      if (!previous.previousElementSibling) {\n        break;\n      }\n\n      current = previous;\n      previous = current.previousElementSibling;\n    };\n\n    const canMerge = previous.innerHTML === current.innerHTML\n      && previous.innerHTML\n      && lastMergedCell !== previous.cellIndex;\n\n    if (canMerge) {\n      changeTile(current, previous, 2);\n      lastMergedCell = previous.cellIndex;\n      isChanged = true;\n    }\n  }\n};\n\nfunction checkCellUp(column) {\n  for (let i = 1; i < column.length; i += 1) {\n    const cellsObj = {\n      current: column[i],\n      previous: column[i - 1],\n    };\n\n    const rowObj = {\n      currentRow: rows[i],\n      previousRow: rows[i - 1],\n    };\n\n    let { current, previous } = cellsObj;\n    let { currentRow, previousRow } = rowObj;\n\n    while (previous.innerHTML.length === 0 && current.innerHTML.length > 0) {\n      changeTile(current, previous);\n      isChanged = true;\n\n      if (!column[column.indexOf(current) - 2]) {\n        break;\n      }\n\n      current = previous;\n      previous = column[column.indexOf(current) - 1];\n\n      currentRow = previousRow;\n      previousRow = rows[rows.indexOf(currentRow) - 1];\n    };\n\n    const canMerge = previous.innerHTML === current.innerHTML\n      && previous.innerHTML\n      && rowIndex !== previousRow.rowIndex;\n\n    if (canMerge) {\n      changeTile(current, previous, 2);\n      rowIndex = previousRow.rowIndex;\n      isChanged = true;\n    }\n  }\n}\n\nfunction checkCellDown(column) {\n  for (let i = column.length - 2; i >= 0; i -= 1) {\n    const cellsObj = {\n      current: column[i],\n      previous: column[i + 1],\n    };\n\n    const rowObj = {\n      currentRow: rows[i],\n      previousRow: rows[i + 1],\n    };\n\n    let { current, previous } = cellsObj;\n    let { currentRow, previousRow } = rowObj;\n\n    while (previous.innerHTML.length === 0 && current.innerHTML.length > 0) {\n      changeTile(current, previous);\n      isChanged = true;\n\n      if (!column[column.indexOf(current) + 2]) {\n        break;\n      }\n\n      current = previous;\n      previous = column[column.indexOf(current) + 1];\n\n      currentRow = previousRow;\n      previousRow = rows[rows.indexOf(currentRow) + 1];\n    };\n\n    const canMerge = previous.innerHTML === current.innerHTML\n      && previous.innerHTML\n      && rowIndex !== previousRow.rowIndex;\n\n    if (canMerge) {\n      changeTile(current, previous, 2);\n      rowIndex = previousRow.rowIndex;\n      isChanged = true;\n    }\n  }\n}\n\nfunction checkLose(rows1) {\n  const loseFlag = [];\n\n  for (let r = 0; r < rows1.length; r += 1) {\n    const rowCells = [...rows1[r].cells];\n    const columnCells = [\n      rows1[0].cells[r],\n      rows1[1].cells[r],\n      rows1[2].cells[r],\n      rows1[3].cells[r],\n    ];\n\n    for (let i = 0; i < rowCells.length - 1; i += 1) {\n      rowCells[i].innerHTML !== rowCells[i + 1].innerHTML\n        ? loseFlag.push(false)\n        : loseFlag.push(true);\n    }\n\n    for (let c = 0; c < columnCells.length - 1; c += 1) {\n      columnCells[c].innerHTML !== columnCells[c + 1].innerHTML\n        ? loseFlag.push(false)\n        : loseFlag.push(true);\n    }\n  }\n\n  for (const cell of cells) {\n    if (!cell.innerHTML) {\n      loseFlag.push(true);\n    }\n  }\n\n  return loseFlag.every(el => el === false);\n};\n"]}